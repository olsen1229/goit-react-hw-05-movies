{"version":3,"file":"static/js/615.a5e15905.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","webpack://react-homework-template/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/MoviesPage.module.css?251f","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e599435c19d6c1550ed0cbe21d733456';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n\n\n// Generic function to fetch data from the TMDb API\n// const fetchData = async (path, params = '') => {\n//   const response = await axios.get(`${path}${params}`);\n//   return response.data.results || response.data;\n// };\n\n// export const fetchTrendingMovies = () => fetchData('trending/movie/day');\n\n// export const fetchMovieByQuery = movieName => fetchData('search/movie', `?query=${movieName}`);\n\n// export const fetchMovieDetails = movieId => fetchData(`movie/${movieId}`);\n\n// export const fetchMovieCast = movieId => fetchData(`movie/${movieId}/credits`).then(data => data.cast);\n\n// export const fetchMovieReviews = movieId => fetchData(`movie/${movieId}/reviews`);","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieListItem_movieItem__mZL09\",\"movieLink\":\"MovieListItem_movieLink__QdmjJ\"};","import PropTypes from 'prop-types';\nimport css from './MovieListItem.module.css';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieListItem = ({ id, title }) => {\n  const location = useLocation();\n\n  return (\n    <li className={css.movieItem} key={id}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={css.movieLink}\n      >\n        <h3>{title}</h3>\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, title }) => (\n        <MovieListItem key={id} id={id} title={title} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviesPage_inputWrapper__RY+g5\",\"input\":\"MoviesPage_input__tXUWp\"};","import { useEffect, useState } from 'react';\nimport { fetchMovieByQuery } from 'api/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Outlet } from 'react-router-dom';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  // const [searchQuery, setSearchQuery] = useState('Friends');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('query') ?? 'Friends'; // Default search query is 'Friends'\n    \n    const [isLoading, setIsLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    };\n    \n    useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieName.trim()) return;\n      setIsLoading(true);\n\n      try {\n        const movies = await fetchMovieByQuery(movieName);\n\n        if (movies.length === 0) {\n          navigate('/not-found', { replace: true });\n          return;\n        }\n        console.log('movies', movies);\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n        \n    fetchMovies();\n  }, [movieName, navigate]);\n\n     return (\n    <div>\n      <div className={css.inputWrapper}>\n        <input\n          type=\"text\"\n          className={css.input}\n          onChange={e => updateQueryString(e.target.value)}\n          placeholder=\"Search movies...\"\n        />\n        {/* Removed the button since the search updates automatically with the input */}\n        {/* <button onClick={fetchMovies}>Search</button> */}\n      </div>\n      {isLoading ? (\n        <p style={{ textAlign: 'center' }}>Loading...</p>\n      ) : (\n        <MovieList movies={movies} />\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesPage;"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","MovieListItem","id","title","location","useLocation","_jsx","className","css","children","Link","to","state","from","MovieList","movies","map","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_useState3","_useState4","isLoading","setIsLoading","navigate","useNavigate","useEffect","fetchMovies","_movies","trim","length","replace","console","log","t0","error","_jsxs","type","onChange","e","query","target","value","placeholder","style","textAlign","Outlet"],"sourceRoot":""}